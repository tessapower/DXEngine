#include "MessageMap.h"
#include <iomanip>
#include <sstream>

// Libraries needed for macro definitions
#include <Cpl.h>
#include <Ime.h>
#include <Ras.h>
#include <Vfw.h>
#include <WinUser.h>

// Adds a new message and string descriptor to the MessageMap
#define REGISTER_MSG(msg) \
  { msg, L#msg }

// TODO: Convert this to a mapping of UINT to std::string so we don't have to
//   include all of the headers and can include all messages
std::unordered_map<DWORD, std::wstring> MessageMap::messages = {
    REGISTER_MSG(WM_ACTIVATE),
    REGISTER_MSG(WM_ACTIVATEAPP),
    REGISTER_MSG(WM_AFXFIRST),
    REGISTER_MSG(WM_AFXLAST),
    REGISTER_MSG(WM_APP),
    REGISTER_MSG(WM_APPCOMMAND),
    REGISTER_MSG(WM_ASKCBFORMATNAME),
    REGISTER_MSG(WM_CANCELJOURNAL),
    REGISTER_MSG(WM_CANCELMODE),
    REGISTER_MSG(WM_CAP_DRIVER_GET_NAMEW),
    REGISTER_MSG(WM_CAP_DRIVER_GET_VERSIONW),
    REGISTER_MSG(WM_CAP_FILE_GET_CAPTURE_FILEW),
    REGISTER_MSG(WM_CAP_FILE_SAVEASW),
    REGISTER_MSG(WM_CAP_FILE_SAVEDIBW),
    REGISTER_MSG(WM_CAP_FILE_SET_CAPTURE_FILEW),
    REGISTER_MSG(WM_CAP_GET_MCI_DEVICEW),
    REGISTER_MSG(WM_CAP_PAL_OPENW),
    REGISTER_MSG(WM_CAP_PAL_SAVEW),
    REGISTER_MSG(WM_CAP_SET_CALLBACK_ERRORW),
    REGISTER_MSG(WM_CAP_SET_CALLBACK_STATUSW),
    REGISTER_MSG(WM_CAP_SET_MCI_DEVICEW),
    REGISTER_MSG(WM_CAPTURECHANGED),
    REGISTER_MSG(WM_CAP_UNICODE_START),
    REGISTER_MSG(WM_CHANGECBCHAIN),
    REGISTER_MSG(WM_CHANGEUISTATE),
    REGISTER_MSG(WM_CHAR),
    REGISTER_MSG(WM_CHARTOITEM),
    REGISTER_MSG(WM_CHILDACTIVATE),
    REGISTER_MSG(WM_CLEAR),
    REGISTER_MSG(WM_CLOSE),
    REGISTER_MSG(WM_COMMAND),
    REGISTER_MSG(WM_COMMNOTIFY),
    REGISTER_MSG(WM_COMPACTING),
    REGISTER_MSG(WM_COMPAREITEM),
    REGISTER_MSG(WM_CONTEXTMENU),
    REGISTER_MSG(WM_CONVERTREQUEST),
    REGISTER_MSG(WM_CONVERTRESULT),
    REGISTER_MSG(WM_COPY),
    REGISTER_MSG(WM_COPYDATA),
    REGISTER_MSG(WM_CPL_LAUNCH),
    REGISTER_MSG(WM_CPL_LAUNCHED),
    REGISTER_MSG(WM_CREATE),
    REGISTER_MSG(WM_CTLCOLORBTN),
    REGISTER_MSG(WM_CTLCOLORDLG),
    REGISTER_MSG(WM_CTLCOLOREDIT),
    REGISTER_MSG(WM_CTLCOLORLISTBOX),
    REGISTER_MSG(WM_CTLCOLORMSGBOX),
    REGISTER_MSG(WM_CTLCOLORSCROLLBAR),
    REGISTER_MSG(WM_CTLCOLORSTATIC),
    REGISTER_MSG(WM_CUT),
    REGISTER_MSG(WM_DEADCHAR),
    REGISTER_MSG(WM_DELETEITEM),
    REGISTER_MSG(WM_DESTROY),
    REGISTER_MSG(WM_DESTROYCLIPBOARD),
    REGISTER_MSG(WM_DEVICECHANGE),
    REGISTER_MSG(WM_DEVMODECHANGE),
    REGISTER_MSG(WM_DISPLAYCHANGE),
    REGISTER_MSG(WM_DRAWCLIPBOARD),
    REGISTER_MSG(WM_DRAWITEM),
    REGISTER_MSG(WM_DROPFILES),
    REGISTER_MSG(WM_ENABLE),
    REGISTER_MSG(WM_ENDSESSION),
    REGISTER_MSG(WM_ENTERIDLE),
    REGISTER_MSG(WM_ENTERMENULOOP),
    REGISTER_MSG(WM_ENTERSIZEMOVE),
    REGISTER_MSG(WM_ERASEBKGND),
    REGISTER_MSG(WM_EXITMENULOOP),
    REGISTER_MSG(WM_EXITSIZEMOVE),
    REGISTER_MSG(WM_FONTCHANGE),
    REGISTER_MSG(WM_GETDLGCODE),
    REGISTER_MSG(WM_GETFONT),
    REGISTER_MSG(WM_GETHOTKEY),
    REGISTER_MSG(WM_GETICON),
    REGISTER_MSG(WM_GETMINMAXINFO),
    REGISTER_MSG(WM_GETOBJECT),
    REGISTER_MSG(WM_GETTEXT),
    REGISTER_MSG(WM_GETTEXTLENGTH),
    REGISTER_MSG(WM_HANDHELDFIRST),
    REGISTER_MSG(WM_HANDHELDLAST),
    REGISTER_MSG(WM_HELP),
    REGISTER_MSG(WM_HOTKEY),
    REGISTER_MSG(WM_HSCROLL),
    REGISTER_MSG(WM_HSCROLLCLIPBOARD),
    REGISTER_MSG(WM_ICONERASEBKGND),
    REGISTER_MSG(WM_IME_CHAR),
    REGISTER_MSG(WM_IME_COMPOSITION),
    REGISTER_MSG(WM_IME_COMPOSITIONFULL),
    REGISTER_MSG(WM_IME_CONTROL),
    REGISTER_MSG(WM_IME_ENDCOMPOSITION),
    REGISTER_MSG(WM_IME_KEYDOWN),
    REGISTER_MSG(WM_IMEKEYDOWN),
    REGISTER_MSG(WM_IME_KEYLAST),
    REGISTER_MSG(WM_IME_KEYUP),
    REGISTER_MSG(WM_IMEKEYUP),
    REGISTER_MSG(WM_IME_NOTIFY),
    REGISTER_MSG(WM_IME_REPORT),
    REGISTER_MSG(WM_IME_REQUEST),
    REGISTER_MSG(WM_IME_SELECT),
    REGISTER_MSG(WM_IME_SETCONTEXT),
    REGISTER_MSG(WM_IME_STARTCOMPOSITION),
    REGISTER_MSG(WM_INITDIALOG),
    REGISTER_MSG(WM_INITMENU),
    REGISTER_MSG(WM_INITMENUPOPUP),
    REGISTER_MSG(WM_INPUT),
    REGISTER_MSG(WM_INPUTLANGCHANGE),
    REGISTER_MSG(WM_INPUTLANGCHANGEREQUEST),
    REGISTER_MSG(WM_INTERIM),
    REGISTER_MSG(WM_KEYDOWN),
    REGISTER_MSG(WM_KEYFIRST),
    REGISTER_MSG(WM_KEYLAST),
    REGISTER_MSG(WM_KEYUP),
    REGISTER_MSG(WM_KILLFOCUS),
    REGISTER_MSG(WM_LBUTTONDBLCLK),
    REGISTER_MSG(WM_LBUTTONDOWN),
    REGISTER_MSG(WM_LBUTTONUP),
    REGISTER_MSG(WM_MBUTTONDBLCLK),
    REGISTER_MSG(WM_MBUTTONDOWN),
    REGISTER_MSG(WM_MBUTTONUP),
    REGISTER_MSG(WM_MDIACTIVATE),
    REGISTER_MSG(WM_MDICASCADE),
    REGISTER_MSG(WM_MDICREATE),
    REGISTER_MSG(WM_MDIDESTROY),
    REGISTER_MSG(WM_MDIGETACTIVE),
    REGISTER_MSG(WM_MDIICONARRANGE),
    REGISTER_MSG(WM_MDIMAXIMIZE),
    REGISTER_MSG(WM_MDINEXT),
    REGISTER_MSG(WM_MDIREFRESHMENU),
    REGISTER_MSG(WM_MDIRESTORE),
    REGISTER_MSG(WM_MDISETMENU),
    REGISTER_MSG(WM_MDITILE),
    REGISTER_MSG(WM_MEASUREITEM),
    REGISTER_MSG(WM_MENUCHAR),
    REGISTER_MSG(WM_MENUCOMMAND),
    REGISTER_MSG(WM_MENUDRAG),
    REGISTER_MSG(WM_MENUGETOBJECT),
    REGISTER_MSG(WM_MENURBUTTONUP),
    REGISTER_MSG(WM_MENUSELECT),
    REGISTER_MSG(WM_MOUSEACTIVATE),
    REGISTER_MSG(WM_MOUSEFIRST),
    REGISTER_MSG(WM_MOUSEHOVER),
    REGISTER_MSG(WM_MOUSEHWHEEL),
    REGISTER_MSG(WM_MOUSELAST),
    REGISTER_MSG(WM_MOUSELEAVE),
    REGISTER_MSG(WM_MOUSEMOVE),
    REGISTER_MSG(WM_MOUSEWHEEL),
    REGISTER_MSG(WM_MOVE),
    REGISTER_MSG(WM_MOVING),
    REGISTER_MSG(WM_NCACTIVATE),
    REGISTER_MSG(WM_NCCALCSIZE),
    REGISTER_MSG(WM_NCCREATE),
    REGISTER_MSG(WM_NCDESTROY),
    REGISTER_MSG(WM_NCHITTEST),
    REGISTER_MSG(WM_NCLBUTTONDBLCLK),
    REGISTER_MSG(WM_NCLBUTTONDOWN),
    REGISTER_MSG(WM_NCLBUTTONUP),
    REGISTER_MSG(WM_NCMBUTTONDBLCLK),
    REGISTER_MSG(WM_NCMBUTTONDOWN),
    REGISTER_MSG(WM_NCMBUTTONUP),
    REGISTER_MSG(WM_NCMOUSEHOVER),
    REGISTER_MSG(WM_NCMOUSELEAVE),
    REGISTER_MSG(WM_NCMOUSEMOVE),
    REGISTER_MSG(WM_NCPAINT),
    REGISTER_MSG(WM_NCRBUTTONDBLCLK),
    REGISTER_MSG(WM_NCRBUTTONDOWN),
    REGISTER_MSG(WM_NCRBUTTONUP),
    REGISTER_MSG(WM_NCXBUTTONDBLCLK),
    REGISTER_MSG(WM_NCXBUTTONDOWN),
    REGISTER_MSG(WM_NCXBUTTONUP),
    REGISTER_MSG(WM_NEXTDLGCTL),
    REGISTER_MSG(WM_NEXTMENU),
    REGISTER_MSG(WM_NOTIFY),
    REGISTER_MSG(WM_NOTIFYFORMAT),
    REGISTER_MSG(WM_NULL),
    REGISTER_MSG(WM_PAINT),
    REGISTER_MSG(WM_PAINTCLIPBOARD),
    REGISTER_MSG(WM_PAINTICON),
    REGISTER_MSG(WM_PALETTECHANGED),
    REGISTER_MSG(WM_PALETTEISCHANGING),
    REGISTER_MSG(WM_PARENTNOTIFY),
    REGISTER_MSG(WM_PASTE),
    REGISTER_MSG(WM_PENWINFIRST),
    REGISTER_MSG(WM_PENWINLAST),
    REGISTER_MSG(WM_POWER),
    REGISTER_MSG(WM_POWERBROADCAST),
    REGISTER_MSG(WM_PRINT),
    REGISTER_MSG(WM_PRINTCLIENT),
    REGISTER_MSG(WM_QUERYDRAGICON),
    REGISTER_MSG(WM_QUERYENDSESSION),
    REGISTER_MSG(WM_QUERYNEWPALETTE),
    REGISTER_MSG(WM_QUERYOPEN),
    REGISTER_MSG(WM_QUERYUISTATE),
    REGISTER_MSG(WM_QUEUESYNC),
    REGISTER_MSG(WM_QUIT),
    REGISTER_MSG(WM_RASDIALEVENT),
    REGISTER_MSG(WM_RBUTTONDBLCLK),
    REGISTER_MSG(WM_RBUTTONDOWN),
    REGISTER_MSG(WM_RBUTTONUP),
    REGISTER_MSG(WM_RENDERALLFORMATS),
    REGISTER_MSG(WM_RENDERFORMAT),
    REGISTER_MSG(WM_SETCURSOR),
    REGISTER_MSG(WM_SETFOCUS),
    REGISTER_MSG(WM_SETFONT),
    REGISTER_MSG(WM_SETHOTKEY),
    REGISTER_MSG(WM_SETICON),
    REGISTER_MSG(WM_SETREDRAW),
    REGISTER_MSG(WM_SETTEXT),
    REGISTER_MSG(WM_SHOWWINDOW),
    REGISTER_MSG(WM_SIZE),
    REGISTER_MSG(WM_SIZECLIPBOARD),
    REGISTER_MSG(WM_SIZING),
    REGISTER_MSG(WM_SPOOLERSTATUS),
    REGISTER_MSG(WM_STYLECHANGED),
    REGISTER_MSG(WM_STYLECHANGING),
    REGISTER_MSG(WM_SYNCPAINT),
    REGISTER_MSG(WM_SYSCHAR),
    REGISTER_MSG(WM_SYSCOLORCHANGE),
    REGISTER_MSG(WM_SYSCOMMAND),
    REGISTER_MSG(WM_SYSDEADCHAR),
    REGISTER_MSG(WM_SYSKEYDOWN),
    REGISTER_MSG(WM_SYSKEYUP),
    REGISTER_MSG(WM_TCARD),
    REGISTER_MSG(WM_TIMECHANGE),
    REGISTER_MSG(WM_TIMER),
    REGISTER_MSG(WM_UNDO),
    REGISTER_MSG(WM_UNICHAR),
    REGISTER_MSG(WM_UNINITMENUPOPUP),
    REGISTER_MSG(WM_UPDATEUISTATE),
    REGISTER_MSG(WM_USER),
    REGISTER_MSG(WM_USERCHANGED),
    REGISTER_MSG(WM_VKEYTOITEM),
    REGISTER_MSG(WM_VSCROLL),
    REGISTER_MSG(WM_VSCROLLCLIPBOARD),
    REGISTER_MSG(WM_WINDOWPOSCHANGED),
    REGISTER_MSG(WM_WINDOWPOSCHANGING),
    REGISTER_MSG(WM_WININICHANGE),
    REGISTER_MSG(WM_WNT_CONVERTREQUESTEX),
    REGISTER_MSG(WM_XBUTTONDBLCLK),
    REGISTER_MSG(WM_XBUTTONDOWN),
    REGISTER_MSG(WM_XBUTTONUP)};

// Returns a string describing the message name and corresponding wParam and lParam values.
// If the message doesn't exist in the MessageMap, the name will be "Unknown Message".
std::wstring MessageMap::operator()(DWORD uMsg, WPARAM wParam, LPARAM lParam) const {
  std::wostringstream out;

  constexpr uint8_t kMsgWidth = 25;
  out << std::left << std::setw(kMsgWidth);

  if (messages.contains(uMsg)) {
    out << messages.at(uMsg);
  } else {
    out << L"!! Unknown Message";
  }

  // Format message params nicely
  constexpr uint8_t kParamWidth = 16;
  out << std::right
      << L"wParam: 0x"
      << std::setw(kParamWidth) << std::setfill(L'0') << std::hex << wParam
      
      << L"  lParam: 0x"
      << std::setw(kParamWidth) << std::setfill(L'0') << std::hex << lParam
      
      << std::endl;

  return out.str();
}
